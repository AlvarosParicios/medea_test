<?php

/**
 * This is the model base class for the table "action_pending".
 * DO NOT MODIFY THIS FILE! It is automatically generated by giix.
 * If any changes are necessary, you must set or override the required
 * property or method in class "ActionPending".
 *
 * Columns in table "action_pending" available as properties of the model,
 * followed by relations of table "action_pending" available as properties of the model.
 *
 * @property integer $action_id
 * @property integer $sit_id
 * @property integer $isp_id
 * @property integer $action_type
 * @property string $params
 * @property string $insertion_date
 * @property integer $retries
 *
 * @property ActionType $actionType
 */
abstract class BaseActionPending extends GxActiveRecord {

	public static function model($className=__CLASS__) {
		return parent::model($className);
	}

	public function tableName() {
		return 'action_pending';
	}

	public static function label($n = 1) {
		return Yii::t('app', 'ActionPending|ActionPendings', $n);
	}

	public static function representingColumn() {
		return 'insertion_date';
	}

	public function rules() {
		return array(
			array('sit_id, isp_id, action_type', 'required'),
			array('sit_id, isp_id, action_type, retries', 'numerical', 'integerOnly'=>true),
			array('params, insertion_date', 'safe'),
			array('params, insertion_date, retries', 'default', 'setOnEmpty' => true, 'value' => null),
			array('action_id, sit_id, isp_id, action_type, params, insertion_date, retries', 'safe', 'on'=>'search'),
		);
	}

	public function relations() {
		return array(
			'actionType' => array(self::BELONGS_TO, 'ActionType', 'action_type'),
		);
	}

	public function pivotModels() {
		return array(
		);
	}

	public function attributeLabels() {
		return array(
			'action_id' => Yii::t('app', 'Action'),
			'sit_id' => Yii::t('app', 'Sit'),
			'isp_id' => Yii::t('app', 'Isp'),
			'action_type' => null,
			'params' => Yii::t('app', 'Params'),
			'insertion_date' => Yii::t('app', 'Insertion Date'),
			'retries' => Yii::t('app', 'Retries'),
			'actionType' => null,
		);
	}

	public function search() {
		$criteria = new CDbCriteria;

		$criteria->compare('action_id', $this->action_id);
		$criteria->compare('sit_id', $this->sit_id);
		$criteria->compare('isp_id', $this->isp_id);
		$criteria->compare('action_type', $this->action_type);
		$criteria->compare('params', $this->params, true);
		$criteria->compare('insertion_date', $this->insertion_date, true);
		$criteria->compare('retries', $this->retries);

		return new CActiveDataProvider($this, array(
			'criteria' => $criteria,
		));
	}
}