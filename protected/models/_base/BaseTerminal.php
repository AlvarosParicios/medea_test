<?php

/**
 * This is the model base class for the table "terminal".
 * DO NOT MODIFY THIS FILE! It is automatically generated by giix.
 * If any changes are necessary, you must set or override the required
 * property or method in class "Terminal".
 *
 * Columns in table "terminal" available as properties of the model,
 * followed by relations of table "terminal" available as properties of the model.
 *
 * @property integer $terminal_id
 * @property integer $sit_id
 * @property integer $isp_id
 * @property integer $bss_plan
 * @property integer $reset_day
 * @property string $upload_data_real
 * @property string $total_data_real
 * @property string $upload_data_effective
 * @property string $total_data_effective
 * @property string $fz_upload_gap
 * @property string $fz_total_gap
 * @property string $register_date
 * @property string $last_update_date
 * @property string $gift_consumption
 * @property integer $sla_status_id
 * @property integer $time_zone
 * @property integer $notification_total
 * @property integer $notification_upload
 *
 * @property QuotaExtra[] $quotaExtras
 * @property BssPlan $bssPlan
 * @property TerminalSlaStatus $slaStatus
 */
abstract class BaseTerminal extends GxActiveRecord {

	public static function model($className=__CLASS__) {
		return parent::model($className);
	}

	public function tableName() {
		return 'terminal';
	}

	public static function label($n = 1) {
		return Yii::t('app', 'Terminal|Terminals', $n);
	}

	public static function representingColumn() {
		return 'register_date';
	}

	public function rules() {
		return array(
			array('sit_id, isp_id, bss_plan, reset_day', 'required'),
			array('sit_id, isp_id, bss_plan, reset_day, sla_status_id, time_zone, notification_total, notification_upload', 'numerical', 'integerOnly'=>true),
			array('upload_data_real, total_data_real, upload_data_effective, total_data_effective, fz_upload_gap, fz_total_gap, gift_consumption', 'length', 'max'=>20),
			array('register_date, last_update_date', 'safe'),
			array('upload_data_real, total_data_real, upload_data_effective, total_data_effective, fz_upload_gap, fz_total_gap, register_date, last_update_date, gift_consumption, sla_status_id, time_zone, notification_total, notification_upload', 'default', 'setOnEmpty' => true, 'value' => null),
			array('terminal_id, sit_id, isp_id, bss_plan, reset_day, upload_data_real, total_data_real, upload_data_effective, total_data_effective, fz_upload_gap, fz_total_gap, register_date, last_update_date, gift_consumption, sla_status_id, time_zone, notification_total, notification_upload', 'safe', 'on'=>'search'),
		);
	}

	public function relations() {
		return array(
			'quotaExtras' => array(self::HAS_MANY, 'QuotaExtra', 'terminal'),
			'bssPlan' => array(self::BELONGS_TO, 'BssPlan', 'bss_plan'),
			'slaStatus' => array(self::BELONGS_TO, 'TerminalSlaStatus', 'sla_status_id'),
		);
	}

	public function pivotModels() {
		return array(
		);
	}

	public function attributeLabels() {
		return array(
			'terminal_id' => Yii::t('app', 'Terminal'),
			'sit_id' => Yii::t('app', 'Sit'),
			'isp_id' => Yii::t('app', 'Isp'),
			'bss_plan' => null,
			'reset_day' => Yii::t('app', 'Reset Day'),
			'upload_data_real' => Yii::t('app', 'Upload Data Real'),
			'total_data_real' => Yii::t('app', 'Total Data Real'),
			'upload_data_effective' => Yii::t('app', 'Upload Data Effective'),
			'total_data_effective' => Yii::t('app', 'Total Data Effective'),
			'fz_upload_gap' => Yii::t('app', 'Fz Upload Gap'),
			'fz_total_gap' => Yii::t('app', 'Fz Total Gap'),
			'register_date' => Yii::t('app', 'Register Date'),
			'last_update_date' => Yii::t('app', 'Last Update Date'),
			'gift_consumption' => Yii::t('app', 'Gift Consumption'),
			'sla_status_id' => null,
			'time_zone' => Yii::t('app', 'Time Zone'),
			'notification_total' => Yii::t('app', 'Notification Total'),
			'notification_upload' => Yii::t('app', 'Notification Upload'),
			'quotaExtras' => null,
			'bssPlan' => null,
			'slaStatus' => null,
		);
	}

	public function search() {
		$criteria = new CDbCriteria;

		$criteria->compare('terminal_id', $this->terminal_id);
		$criteria->compare('sit_id', $this->sit_id);
		$criteria->compare('isp_id', $this->isp_id);
		$criteria->compare('bss_plan', $this->bss_plan);
		$criteria->compare('reset_day', $this->reset_day);
		$criteria->compare('upload_data_real', $this->upload_data_real, true);
		$criteria->compare('total_data_real', $this->total_data_real, true);
		$criteria->compare('upload_data_effective', $this->upload_data_effective, true);
		$criteria->compare('total_data_effective', $this->total_data_effective, true);
		$criteria->compare('fz_upload_gap', $this->fz_upload_gap, true);
		$criteria->compare('fz_total_gap', $this->fz_total_gap, true);
		$criteria->compare('register_date', $this->register_date, true);
		$criteria->compare('last_update_date', $this->last_update_date, true);
		$criteria->compare('gift_consumption', $this->gift_consumption, true);
		$criteria->compare('sla_status_id', $this->sla_status_id);
		$criteria->compare('time_zone', $this->time_zone);
		$criteria->compare('notification_total', $this->notification_total);
		$criteria->compare('notification_upload', $this->notification_upload);

		return new CActiveDataProvider($this, array(
			'criteria' => $criteria,
		));
	}
}