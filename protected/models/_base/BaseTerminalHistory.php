<?php

/**
 * This is the model base class for the table "terminal_history".
 * DO NOT MODIFY THIS FILE! It is automatically generated by giix.
 * If any changes are necessary, you must set or override the required
 * property or method in class "TerminalHistory".
 *
 * Columns in table "terminal_history" available as properties of the model,
 * followed by relations of table "terminal_history" available as properties of the model.
 *
 * @property integer $id
 * @property integer $sit_id
 * @property integer $isp_id
 * @property integer $bss_plan
 * @property integer $reset_day
 * @property string $upload_data_real
 * @property string $total_data_real
 * @property string $upload_data_effective
 * @property string $total_data_effective
 * @property string $upload_data_real_residual
 * @property string $total_data_real_residual
 * @property string $upload_data_effective_residual
 * @property string $total_data_effective_residual
 * @property string $insertion_date
 * @property integer $motive
 * @property string $comment
 * @property string $gift_consumption
 * @property integer $sla_status_id
 * @property string $fz_upload_gap
 * @property string $fz_total_gap
 * @property string $last_update_date
 *
 * @property TerminalHistoryMotive $motive0
 */
abstract class BaseTerminalHistory extends GxActiveRecord {

	public static function model($className=__CLASS__) {
		return parent::model($className);
	}

	public function tableName() {
		return 'terminal_history';
	}

	public static function label($n = 1) {
		return Yii::t('app', 'TerminalHistory|TerminalHistories', $n);
	}

	public static function representingColumn() {
		return 'insertion_date';
	}

	public function rules() {
		return array(
			array('sit_id, isp_id, bss_plan, reset_day, upload_data_real, total_data_real, upload_data_effective, total_data_effective, upload_data_real_residual, total_data_real_residual, upload_data_effective_residual, total_data_effective_residual, sla_status_id', 'required'),
			array('sit_id, isp_id, bss_plan, reset_day, motive, sla_status_id', 'numerical', 'integerOnly'=>true),
			array('upload_data_real, total_data_real, upload_data_effective, total_data_effective, upload_data_real_residual, total_data_real_residual, upload_data_effective_residual, total_data_effective_residual, gift_consumption, fz_upload_gap, fz_total_gap', 'length', 'max'=>20),
			array('insertion_date, comment, last_update_date', 'safe'),
			array('insertion_date, motive, comment, gift_consumption, fz_upload_gap, fz_total_gap, last_update_date', 'default', 'setOnEmpty' => true, 'value' => null),
			array('id, sit_id, isp_id, bss_plan, reset_day, upload_data_real, total_data_real, upload_data_effective, total_data_effective, upload_data_real_residual, total_data_real_residual, upload_data_effective_residual, total_data_effective_residual, insertion_date, motive, comment, gift_consumption, sla_status_id, fz_upload_gap, fz_total_gap, last_update_date', 'safe', 'on'=>'search'),
		);
	}

	public function relations() {
		return array(
			'motive0' => array(self::BELONGS_TO, 'TerminalHistoryMotive', 'motive'),
		);
	}

	public function pivotModels() {
		return array(
		);
	}

	public function attributeLabels() {
		return array(
			'id' => Yii::t('app', 'ID'),
			'sit_id' => Yii::t('app', 'Sit'),
			'isp_id' => Yii::t('app', 'Isp'),
			'bss_plan' => Yii::t('app', 'Bss Plan'),
			'reset_day' => Yii::t('app', 'Reset Day'),
			'upload_data_real' => Yii::t('app', 'Upload Data Real'),
			'total_data_real' => Yii::t('app', 'Total Data Real'),
			'upload_data_effective' => Yii::t('app', 'Upload Data Effective'),
			'total_data_effective' => Yii::t('app', 'Total Data Effective'),
			'upload_data_real_residual' => Yii::t('app', 'Upload Data Real Residual'),
			'total_data_real_residual' => Yii::t('app', 'Total Data Real Residual'),
			'upload_data_effective_residual' => Yii::t('app', 'Upload Data Effective Residual'),
			'total_data_effective_residual' => Yii::t('app', 'Total Data Effective Residual'),
			'insertion_date' => Yii::t('app', 'Insertion Date'),
			'motive' => null,
			'comment' => Yii::t('app', 'Comment'),
			'gift_consumption' => Yii::t('app', 'Gift Consumption'),
			'sla_status_id' => Yii::t('app', 'Sla Status'),
			'fz_upload_gap' => Yii::t('app', 'Fz Upload Gap'),
			'fz_total_gap' => Yii::t('app', 'Fz Total Gap'),
			'last_update_date' => Yii::t('app', 'Last Update Date'),
			'motive0' => null,
		);
	}

	public function search() {
		$criteria = new CDbCriteria;

		$criteria->compare('id', $this->id);
		$criteria->compare('sit_id', $this->sit_id);
		$criteria->compare('isp_id', $this->isp_id);
		$criteria->compare('bss_plan', $this->bss_plan);
		$criteria->compare('reset_day', $this->reset_day);
		$criteria->compare('upload_data_real', $this->upload_data_real, true);
		$criteria->compare('total_data_real', $this->total_data_real, true);
		$criteria->compare('upload_data_effective', $this->upload_data_effective, true);
		$criteria->compare('total_data_effective', $this->total_data_effective, true);
		$criteria->compare('upload_data_real_residual', $this->upload_data_real_residual, true);
		$criteria->compare('total_data_real_residual', $this->total_data_real_residual, true);
		$criteria->compare('upload_data_effective_residual', $this->upload_data_effective_residual, true);
		$criteria->compare('total_data_effective_residual', $this->total_data_effective_residual, true);
		$criteria->compare('insertion_date', $this->insertion_date, true);
		$criteria->compare('motive', $this->motive);
		$criteria->compare('comment', $this->comment, true);
		$criteria->compare('gift_consumption', $this->gift_consumption, true);
		$criteria->compare('sla_status_id', $this->sla_status_id);
		$criteria->compare('fz_upload_gap', $this->fz_upload_gap, true);
		$criteria->compare('fz_total_gap', $this->fz_total_gap, true);
		$criteria->compare('last_update_date', $this->last_update_date, true);

		return new CActiveDataProvider($this, array(
			'criteria' => $criteria,
		));
	}
}