<?php

/**
 * This is the model base class for the table "quota_extra_history".
 * DO NOT MODIFY THIS FILE! It is automatically generated by giix.
 * If any changes are necessary, you must set or override the required
 * property or method in class "QuotaExtraHistory".
 *
 * Columns in table "quota_extra_history" available as properties of the model,
 * followed by relations of table "quota_extra_history" available as properties of the model.
 *
 * @property integer $id
 * @property integer $extra_id
 * @property integer $terminal
 * @property integer $status
 * @property integer $traffic_type
 * @property string $quota
 * @property string $initial_consumption
 * @property string $consumed_quota
 * @property string $booking_date
 * @property string $activation_date
 * @property string $completion_date
 * @property string $expiration_date
 * @property string $cancellation_date
 * @property string $insertion_date
 *
 * @property QuotaExtraTrafficType $trafficType
 */
abstract class BaseQuotaExtraHistory extends GxActiveRecord {

	public static function model($className=__CLASS__) {
		return parent::model($className);
	}

	public function tableName() {
		return 'quota_extra_history';
	}

	public static function label($n = 1) {
		return Yii::t('app', 'QuotaExtraHistory|QuotaExtraHistories', $n);
	}

	public static function representingColumn() {
		return 'insertion_date';
	}

	public function rules() {
		return array(
			array('extra_id, terminal', 'required'),
			array('extra_id, terminal, status, traffic_type', 'numerical', 'integerOnly'=>true),
			array('quota, initial_consumption, consumed_quota', 'length', 'max'=>20),
			array('booking_date, activation_date, completion_date, expiration_date, cancellation_date, insertion_date', 'safe'),
			array('status, traffic_type, quota, initial_consumption, consumed_quota, booking_date, activation_date, completion_date, expiration_date, cancellation_date, insertion_date', 'default', 'setOnEmpty' => true, 'value' => null),
			array('id, extra_id, terminal, status, traffic_type, quota, initial_consumption, consumed_quota, booking_date, activation_date, completion_date, expiration_date, cancellation_date, insertion_date', 'safe', 'on'=>'search'),
		);
	}

	public function relations() {
		return array(
			'trafficType' => array(self::BELONGS_TO, 'QuotaExtraTrafficType', 'traffic_type'),
		);
	}

	public function pivotModels() {
		return array(
		);
	}

	public function attributeLabels() {
		return array(
			'id' => Yii::t('app', 'ID'),
			'extra_id' => Yii::t('app', 'Extra'),
			'terminal' => Yii::t('app', 'Terminal'),
			'status' => Yii::t('app', 'Status'),
			'traffic_type' => null,
			'quota' => Yii::t('app', 'Quota'),
			'initial_consumption' => Yii::t('app', 'Initial Consumption'),
			'consumed_quota' => Yii::t('app', 'Consumed Quota'),
			'booking_date' => Yii::t('app', 'Booking Date'),
			'activation_date' => Yii::t('app', 'Activation Date'),
			'completion_date' => Yii::t('app', 'Completion Date'),
			'expiration_date' => Yii::t('app', 'Expiration Date'),
			'cancellation_date' => Yii::t('app', 'Cancellation Date'),
			'insertion_date' => Yii::t('app', 'Insertion Date'),
			'trafficType' => null,
		);
	}

	public function search() {
		$criteria = new CDbCriteria;

		$criteria->compare('id', $this->id);
		$criteria->compare('extra_id', $this->extra_id);
		$criteria->compare('terminal', $this->terminal);
		$criteria->compare('status', $this->status);
		$criteria->compare('traffic_type', $this->traffic_type);
		$criteria->compare('quota', $this->quota, true);
		$criteria->compare('initial_consumption', $this->initial_consumption, true);
		$criteria->compare('consumed_quota', $this->consumed_quota, true);
		$criteria->compare('booking_date', $this->booking_date, true);
		$criteria->compare('activation_date', $this->activation_date, true);
		$criteria->compare('completion_date', $this->completion_date, true);
		$criteria->compare('expiration_date', $this->expiration_date, true);
		$criteria->compare('cancellation_date', $this->cancellation_date, true);
		$criteria->compare('insertion_date', $this->insertion_date, true);

		return new CActiveDataProvider($this, array(
			'criteria' => $criteria,
		));
	}
}